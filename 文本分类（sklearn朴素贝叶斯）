from sklearn.datasets import fetch_20newsgroups
from sklearn.model_selection import train_test_split  # 分割样本
from sklearn.feature_extraction.text import CountVectorizer  # 文本特征向量转化模块
from sklearn.naive_bayes import MultinomialNB  # 朴素贝叶斯
from sklearn.metrics import classification_report # 分类结果报告

# initial
news = fetch_20newsgroups(subset='all')
trainX,testX,trainY,testY = train_test_split(news.data,news.target,test_size=0.25,random_state=33)
# feature extract
vec = CountVectorizer()

# 归一化
trainX = vec.fit_transform(trainX)
testX = vec.transform(testX)

# 朴素贝叶斯模型
mnb = MultinomialNB() # initial
mnb.fit(trainX,trainY) # fit

# predict
preY = mnb.predict(testX)

# score report
score = mnb.score(testX,testY)
report = classification_report(testY,preY,target_names=news.target_names)
print("score:",score)
print("report:",report)
